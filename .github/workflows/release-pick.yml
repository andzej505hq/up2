name: Pick commits into a release branch
on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: Pull request number
        required: True

jobs:
  pick-to-release-branch:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🔎PR number ${{ toJson(github.event.repository.owner) }}"
      - uses: octokit/graphql-action@v2.x
        id: get_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          query: |
            query($owner:String!,$repo:String!,$pr_num:Int!) {
              repository(owner:$owner,name:$repo) {
                pullRequest(number: $pr_num) {
                  commits(first: 100) {
                    totalCount
                    nodes {
                      commit {
                        oid
                        authoredDate
                      }
                    }
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          pr_num: ${{ github.event.inputs.pr_number }}
      - name: get commits
        id: commits
        run: |
          commits="$(jq '[.repository.pullRequest.commits.nodes | sort_by(.commit.authoredDate) | .[].commit.oid]' <<< '${{ steps.get_pr.outputs.data }}' | tr -d '\n ')"
          echo "Found commits: ${commits}"
          echo ::set-output name=commits_arr::"${commits}"
      - name: show commits
        id: show
        run: |
          jq -c '.[]' <<< '${{ steps.commits.outputs.commits_arr }}' | xargs -L 1 -I "{}" echo "--{}--"

